.vote.vote-open
  = render :partial => 'paperproposals/summary_for_vote', :locals => {:paperproposal => vote.paperproposal}

  - unless vote.project_board_vote
    %h4 Requested Datasets
    %ul
      - (vote.paperproposal.datasets & vote.user.datasets_owned).each do |ds|
        %li= link_to ds.title, ds

  %h4 State of Voting
  .vote-state
    %span.voters-with-arrows
      - other_votes = vote.project_board_vote ? vote.paperproposal.project_board_votes : vote.paperproposal.for_data_request_votes
      - other_votes.each do |pb_vote|
        .voter-with-arrow
          %span.voter-name
            = link_to pb_vote.user.to_label, pb_vote.user
          = image_tag("arrow_right_#{pb_vote.vote}.png", :title => pb_vote.comment)

    - if vote.project_board_vote
      %span.vote-result
        = image_tag("arrow_join_#{vote.paperproposal.board_state}.png")
        %span.vote-state-text= vote.paperproposal.calc_board_state

  = form_for vote, :url => update_vote_path(vote) do |form|
    %h4 Your Vote
    %dl
      %dt= form.label :vote, 'Accept or reject?'
      - vote_choices = ['accept', 'reject']
      - vote_choices << 'none' if current_user.has_role?(:admin)
      %dd= form.select :vote, vote_choices
    %dl
      %dt= form.label :comment
      %dd= form.text_area :comment
    = form.submit "Send vote"