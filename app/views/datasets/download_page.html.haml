- content_for :info do
  %h3 Last update
  %p #{time_ago_in_words(@dataset.last_update)} ago
  %h3 Download URLs
  = render :partial => "popup_display_download_url", :locals => {:id => @dataset.id, :css => "dataset_owners", :caption => 'Display download urls'}
  %h3  Downloads history (#{@dataset.dataset_downloads_count})
  - if @dataset.dataset_downloads_count > 0
    %ul#downloaders
      - @dataset.dataset_downloads.includes(:user).sort_by {|dl|dl.created_at}.reverse.each do |dl|
        %li
          = dl.created_at.localtime.strftime "%Y-%m-%d %H:%M"
          - if dl.user
            = link_to dl.user.lastname, dl.user
          - else
            Public
    - if @dataset.dataset_downloads_count > 10
      %span.show_all Show all #{@dataset.dataset_downloads_count}

%h2 Download #{link_to @dataset.title, @dataset}
%h3 You can choose one of these formats:

#tabs.overflow.hidden
  %ul
    %li= link_to "Excel file" , "#xls"
    %li= link_to "CSV" , "#csv"
    %li= link_to "CSV2" , "#csv2"

  #csv2
    %h3 CSV file with separate category columns
    %p Same as Regular CSV file, but the invalid values are stored in a separate column. For dataset that hasn't been approved yet, it's same with Regular CSV file.
    #download
      = link_to "Download", download_dataset_url(@dataset, :csv, :separate_category_columns => true), class: 'button'
  #csv
    %h3 Regular CSV file
    %p This correspondes to the raw data sheet of the Excel file, containing only data.
    #download
      = link_to "Download", download_dataset_path(@dataset, :csv), class: 'button'
  #xls
    %div.overflow
      %h3.left MS-Excel2003 file
      %span#download_status.right
        Status:
        = content_tag :span, id: @dataset.download_status do
          = @dataset.download_status
      %span.right= image_tag "spinner.gif", :class => ['queued', 'started'].include?(@dataset.download_status) ? "" : 'hidden', :id => "indicator"
    - if @dataset.download_status == "outdated"
      #warning This Excel file is outdated. Usually, it will be regenerated within at most 10 minutes. You could wait for a while, or you could also #{link_to("regenerated download", regenerate_download_dataset_path(@dataset))} manually rightnow.
    - if @dataset.download_status == "queued"
      #warning  This Excel file is being regenerated, please wait till it is finished.
    %p
      This is the same as the workbook the owner uploaded, including all the data and metadata.
    #download
      = link_to "Download", download_dataset_path(@dataset), class: 'button'

:javascript
  $(function(){
    $("#tabs").tabs().show(0);
    if ($("#download_status").text().indexOf("finished") == -1){
      var intervalId = setInterval(
        function(){
          $("#download_status").load("#{download_status_dataset_url(@dataset)}", function(){
            var status = $("#download_status").text();
            if( status.indexOf("finished") != -1 ){
              clearInterval(intervalId);
              $("#warning, #indicator").hide();
            }
            if (status.indexOf("queued") != -1){
              $("#warning").text("This Excel file is being regenerated, please wait till it is finished.");
            }
          });
        }, 5000
      );
    };
    $("ul#downloaders").find("li:gt(9)").hide();
    $(".show_all").click(function(){
      $("ul#downloaders").find("li:gt(9)").show();
      $(this).remove();
    })
  });